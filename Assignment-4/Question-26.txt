26. Explain Inheritance in Python with an example? What is init? Or What Is A Constructor In Python?
Ans. Inheritance is an important aspect of the object-oriented paradigm. Inheritance provides code 
reusability to the program because we can use an existing class to create a new class instead of 
creating it from scratch.
-> In inheritance, the child class acquires the properties and can access all the data members and 
functions defined in the parent class. A child class can also provide its specific implementation to 
the functions of the parent class. In this section of the tutorial, we will discuss inheritance in detail.
-> In python, a derived class can inherit base class by just mentioning the base in the bracket after 
the derived class name. Consider the following syntax to inherit a base class into the derived class.

Example:-
class Animal:  
    def speak(self):  
        print("Animal Speaking")  
#child class Dog inherits the base class Animal  
class Dog(Animal):  
    def bark(self):  
        print("dog barking")  
d = Dog()  
d.bark()  
d.speak()  

->  Constructors are generally used for instantiating an object. The task of constructors is to 
initialize(assign values) to the data members of the class when an object of the class is created. 
In Python the __init__() method is called the constructor and is always called when an object is created.